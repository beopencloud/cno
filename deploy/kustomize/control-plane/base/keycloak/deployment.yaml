<<<<<<< HEAD
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 8443
  selector:
    app: keycloak
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: keyclaok
  name: keycloak
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      volumes:
      - name: cno-realm
        configMap:
          name: cno-realm
      containers:      
      - env: 
        - name: KEYCLOAK_IMPORT
          value: /cno/cno-realm.json
        #- name: KEYCLOAK_IMPORT
        #  valueFrom:
        #    configMapKeyRef:
        #      name: cno-realm
        #      key: cno-realm.json
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              key: ADMIN_USERNAME
              name: credential-cloud-keycloak
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              key: ADMIN_PASSWORD
              name: credential-cloud-keycloak
        - name: DB_VENDOR
          value: MYSQL
        - name: DB_ADDR
          value: cno-api-mysql
        - name: DB_PORT
          value: "3306"
        - name: DB_DATABASE
          value: cnokeycloak
        - name: DB_SCHEMA
          value: public
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cno-api-db-secret
              key: ROOT_PASSWORD
        - name: DB_USER
          value: root
        image: $(KEYCLOAK_IMAGE)
        #args: ["import --dir='/cno' --file='cno-realm.json' --realm='cno' --override='true' && start --proxy='passthrough' --hostname-strict-backchannel='false' --hostname='localhost' --http-enabled='true' --hostname-strict='false' "]
        #args: ["import --dir='/cno' --file='cno-realm.json' --realm='cno' --override='true' && start --proxy='passthrough' --hostname-strict-backchannel='false' --db-password='POSTGRES_PASS' --db-schema='public' --db-url-database='postgres' --db-url-properties='postgres' --db-url-host='postgres-svc:5432' --db-username='postgres' --hostname='localhost' --http-enabled='true' --hostname-strict='false'"]
        imagePullPolicy: IfNotPresent
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP        
        volumeMounts:
          - name: cno-realm
            mountPath: /cno          
        resources: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      terminationGracePeriodSeconds: 60
  updateStrategy:
    type: RollingUpdate
  
      
---
=======
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: keycloak-operator
  template:
    metadata:
      labels:
        name: keycloak-operator
    spec:
      serviceAccountName: keycloak-operator
      containers:
      - name: keycloak-operator
        # Replace this with the built image name
        image: quay.io/keycloak/keycloak-operator:12.0.1
        command:
        - keycloak-operator
        imagePullPolicy: Always
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: "keycloak-operator"
        - name: RELATED_IMAGE_KEYCLOAK
          value: "quay.io/keycloak/keycloak:12.0.1"
        - name: RELATED_IMAGE_POSTGRESQL
          value: "registry.access.redhat.com/rhscl/postgresql-10-rhel7:1"
        - name: RELATED_IMAGE_KEYCLOAK_INIT_CONTAINER
          value: "quay.io/keycloak/keycloak-init-container:master"
>>>>>>> 2ad8d51d600200a23a31fe70a7bef1d68dcdeb06

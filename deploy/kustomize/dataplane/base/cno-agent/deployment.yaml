apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: cno-agent
  name: cno-agent
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: cno-agent
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp:
      labels:
        run: cno-agent
    spec:
      containers:
<<<<<<< HEAD
      - image: beopenit/cno-agent:1.0.0-rc
=======
      - image: beopenit/cno-agent:latest
>>>>>>> 2ad8d51d600200a23a31fe70a7bef1d68dcdeb06
        imagePullPolicy: Always
        name: cno-agent
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        - name: IN_CLUSTER
          value: "true"
        - name: KAFKA_TlS_ENABLED
          value: "true"
        - name: KAFKA_BROKERS
          value: "cno-kafka-cluster-kafka-bootstrap:9093"
        - name: KAFKA_CA_CERT
          value: /.key/caFile
        - name: KAFKA_CLIENT_CERT
          value: /.key/certFile
        - name: KAFKA_CLIENT_KEY
          value: /.key/keyFile
        - name: LICENCE
          valueFrom:
            secretKeyRef:
              name: cno-agent-config
              key: licence
        volumeMounts:
        - name: kafkaconfig
          mountPath: "/.key"
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      serviceAccountName: cno-agent
      volumes:
      - name: kafkaconfig
        secret:
          secretName: cno-agent-config

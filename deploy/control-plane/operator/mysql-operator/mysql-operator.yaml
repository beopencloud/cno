---
# Source: mysql-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql-operator
  labels:
    app: mysql-operator
    chart: mysql-operator-0.4.0
    release: mysql-operator
    heritage: Helm
---
# Source: mysql-operator/templates/orc-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysql-operator-orc
  labels:
    app: mysql-operator
    chart: mysql-operator-0.4.0
    release: mysql-operator
    heritage: Helm
data:
  TOPOLOGY_USER: "b3JjaGVzdHJhdG9y"
  TOPOLOGY_PASSWORD: "RTZZQzFTZDAyMA=="
---
# Source: mysql-operator/templates/orc-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-operator-orc
  labels:
    app: mysql-operator
    chart: mysql-operator-0.4.0
    release: mysql-operator
    heritage: Helm
data:
  orchestrator.conf.json: "{\n  \"ApplyMySQLPromotionAfterMasterFailover\": false,\n  \"BackendDB\": \"sqlite\",\n  \"Debug\": false,\n  \"DetachLostReplicasAfterMasterFailover\": true,\n  \"DetectClusterAliasQuery\": \"SELECT CONCAT(SUBSTRING(@@hostname, 1, LENGTH(@@hostname) - 1 - LENGTH(SUBSTRING_INDEX(@@hostname,'-',-2))),'.',SUBSTRING_INDEX(@@report_host,'.',-1))\",\n  \"DetectInstanceAliasQuery\": \"SELECT @@hostname\",\n  \"DiscoverByShowSlaveHosts\": false,\n  \"FailMasterPromotionIfSQLThreadNotUpToDate\": true,\n  \"HTTPAdvertise\": \"http://{{ .Env.HOSTNAME }}-svc:80\",\n  \"HostnameResolveMethod\": \"none\",\n  \"InstancePollSeconds\": 5,\n  \"ListenAddress\": \":3000\",\n  \"MasterFailoverDetachReplicaMasterHost\": true,\n  \"MySQLHostnameResolveMethod\": \"@@report_host\",\n  \"MySQLTopologyCredentialsConfigFile\": \"/etc/orchestrator/orc-topology.cnf\",\n  \"OnFailureDetectionProcesses\": [\n    \"/usr/local/bin/orc-helper event -w '{failureClusterAlias}' 'OrcFailureDetection' 'Failure: {failureType}, failed host: {failedHost}, lost replcas: {lostReplicas}' || true\",\n    \"/usr/local/bin/orc-helper failover-in-progress '{failureClusterAlias}' '{failureDescription}' || true\"\n  ],\n  \"PostIntermediateMasterFailoverProcesses\": [\n    \"/usr/local/bin/orc-helper event '{failureClusterAlias}' 'OrcPostIntermediateMasterFailover' 'Failure type: {failureType}, failed hosts: {failedHost}, slaves: {countSlaves}' || true\"\n  ],\n  \"PostMasterFailoverProcesses\": [\n    \"/usr/local/bin/orc-helper event '{failureClusterAlias}' 'OrcPostMasterFailover' 'Failure type: {failureType}, new master: {successorHost}, slaves: {slaveHosts}' || true\"\n  ],\n  \"PostUnsuccessfulFailoverProcesses\": [\n    \"/usr/local/bin/orc-helper event -w '{failureClusterAlias}' 'OrcPostUnsuccessfulFailover' 'Failure: {failureType}, failed host: {failedHost} with {countSlaves} slaves' || true\"\n  ],\n  \"PreFailoverProcesses\": [\n    \"/usr/local/bin/orc-helper failover-in-progress '{failureClusterAlias}' '{failureDescription}' || true\"\n  ],\n  \"ProcessesShellCommand\": \"sh\",\n  \"RaftAdvertise\": \"{{ .Env.HOSTNAME }}-svc\",\n  \"RaftBind\": \"{{ .Env.HOSTNAME }}\",\n  \"RaftDataDir\": \"/var/lib/orchestrator\",\n  \"RaftEnabled\": true,\n  \"RaftNodes\": [],\n  \"RecoverIntermediateMasterClusterFilters\": [\n    \".*\"\n  ],\n  \"RecoverMasterClusterFilters\": [\n    \".*\"\n  ],\n  \"RecoveryIgnoreHostnameFilters\": [],\n  \"RecoveryPeriodBlockSeconds\": 300,\n  \"RemoveTextFromHostnameDisplay\": \":3306\",\n  \"SQLite3DataFile\": \"/var/lib/orchestrator/orc.db\",\n  \"SlaveLagQuery\": \"SELECT TIMESTAMPDIFF(SECOND,ts,NOW()) as drift FROM sys_operator.heartbeat ORDER BY drift ASC LIMIT 1\",\n  \"UnseenInstanceForgetHours\": 1\n}"
  orc-topology.cnf: |
    [client]
    user = {{ .Env.ORC_TOPOLOGY_USER }}
    password = {{ .Env.ORC_TOPOLOGY_PASSWORD }}
---
# Source: mysql-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: 'mysql-operator'
    chart: 'mysql-operator-0.4.0'
    heritage: 'Helm'
    release: 'mysql-operator'
  name: 'mysql-operator'
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - mysql.presslabs.org
  resources:
  - mysqlbackups
  - mysqlbackups/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - services
  - events
  - jobs
  - pods
  - persistentvolumeclaims
  - configmaps/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - mysql.presslabs.org
  resources:
  - mysqlclusters
  - mysqlclusters/status
  - mysqlclusters/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: mysql-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: mysql-operator
  labels:
    app: mysql-operator
    chart: mysql-operator-0.4.0
    release: mysql-operator
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mysql-operator
subjects:
  - name: mysql-operator
    namespace: "cno-system"
    kind: ServiceAccount
---
# Source: mysql-operator/templates/orc-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql-operator-0-svc
  labels:
    app: mysql-operator
    chart: mysql-operator-0.4.0
    release: mysql-operator
    heritage: Helm
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 80
    targetPort: 3000
  - name: raft
    port: 10008
    targetPort: 10008
  selector:
    statefulset.kubernetes.io/pod-name: mysql-operator-0
---
# Source: mysql-operator/templates/orc-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql-operator
  labels:
    app: mysql-operator
    chart: mysql-operator-0.4.0
    release: mysql-operator
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: mysql-operator
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000
---
# Source: mysql-operator/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-operator
  labels:
    app: mysql-operator
    chart: mysql-operator-0.4.0
    release: mysql-operator
    heritage: Helm
spec:
  replicas: 1
  serviceName: mysql-operator-orc
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: mysql-operator
      release: mysql-operator
  template:
    metadata:
      labels:
        app: mysql-operator
        release: mysql-operator
      annotations:
        checksum/config: 0728c31a378a32b09e3a0e72611f4a3bb3ee5720c1ff9bdd2fc719ae28234ed9
        checksum/secret: f9296cc326e6906162c4328796d372e315d440dd1b65a6de3888335fd0ff568b
    spec:
      serviceAccountName: mysql-operator
      containers:
        - name: operator
          image: "quay.io/presslabs/mysql-operator:0.4.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: ORC_TOPOLOGY_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-operator-orc
                  key: TOPOLOGY_USER
            - name: ORC_TOPOLOGY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-operator-orc
                  key: TOPOLOGY_PASSWORD
          args:
            - --leader-election-namespace=cno-system
            # connect to orchestrator on localhost
            - --orchestrator-uri=http://127.0.0.1:3000/api
            - --sidecar-image=quay.io/presslabs/mysql-operator-sidecar:0.4.0
          resources:
            {}
          # TODO: add livenessProbe to controller
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: 80
        - name: orchestrator
          image: quay.io/presslabs/mysql-operator-orchestrator:0.4.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: web
              protocol: TCP
            - containerPort: 10008
              name: raft
              protocol: TCP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - prefix: ORC_
              secretRef:
                name: mysql-operator-orc
          volumeMounts:
            - name: data
              mountPath: /var/lib/orchestrator/
            - name: config
              mountPath: /templates/
            - name: etc-orchestrator
              mountPath: /etc/orchestrator
          livenessProbe:
            timeoutSeconds: 10
            initialDelaySeconds: 200
            httpGet:
              path: /api/lb-check
              port: 3000
          # https://github.com/github/orchestrator/blob/master/docs/raft.md#proxy-healthy-raft-nodes
          readinessProbe:
            timeoutSeconds: 10
            httpGet:
              path: /api/raft-health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: mysql-operator-orc
        - name: etc-orchestrator
          emptyDir: {}
      securityContext:
        fsGroup: 777
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ ReadWriteOnce ]
        resources:
          requests:
            storage: 1Gi



---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: mysqlbackups.mysql.presslabs.org
spec:
  group: mysql.presslabs.org
  names:
    kind: MysqlBackup
    plural: mysqlbackups
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            backupSecretName:
              description: BackupSecretName the name of secrets that contains the
                credentials to access the bucket. Default is used the secret specified
                in cluster.
              type: string
            backupURL:
              description: BackupURL represents the URL to the backup location, this
                can be partially specifyied. Default is used the one specified in
                the cluster.
              type: string
            clusterName:
              description: ClustterName represents the cluster for which to take backup
              type: string
            remoteDeletePolicy:
              description: RemoteDeletePolicy the deletion policy that specify how
                to treat the data from remote storage. By default it's used softDelete.
              type: string
          required:
          - clusterName
          type: object
        status:
          properties:
            completed:
              description: Completed indicates whether the backup is in a final state,
                no matter whether its' corresponding job failed or succeeded
              type: boolean
            conditions:
              description: Conditions represents the backup resource conditions list.
              items:
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime
                    format: date-time
                    type: string
                  message:
                    description: Message
                    type: string
                  reason:
                    description: Reason
                    type: string
                  status:
                    description: Status of the condition, one of (\"True\", \"False\",
                      \"Unknown\")
                    type: string
                  type:
                    description: type of cluster condition, values in (\"Ready\")
                    type: string
                required:
                - type
                - status
                - lastTransitionTime
                - reason
                - message
                type: object
              type: array
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: mysqlclusters.mysql.presslabs.org
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type == "Ready")].status
    description: The cluster status
    name: Ready
    type: string
  - JSONPath: .spec.replicas
    description: The number of desired nodes
    name: Replicas
    type: integer
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: mysql.presslabs.org
  names:
    kind: MysqlCluster
    plural: mysqlclusters
    shortNames:
    - mysql
  scope: Namespaced
  subresources:
    scale:
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.readyNodes
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            backupRemoteDeletePolicy:
              description: BackupRemoteDeletePolicy the deletion policy that specify
                how to treat the data from remote storage. By default it's used softDelete.
              type: string
            backupSchedule:
              description: Specify under crontab format interval to take backups leave
                it empty to deactivate the backup process Defaults to ""
              type: string
            backupScheduleJobsHistoryLimit:
              description: If set keeps last BackupScheduleJobsHistoryLimit Backups
              format: int64
              type: integer
            backupSecretName:
              description: Represents the name of the secret that contains credentials
                to connect to the storage provider to store backups.
              type: string
            backupURL:
              description: Represents an URL to the location where to put backups.
              type: string
            image:
              description: To specify the image that will be used for mysql server
                container. If this is specified then the mysqlVersion is used as source
                for MySQL server version.
              type: string
            initBucketSecretName:
              type: string
            initBucketURI:
              description: Same as InitBucketURL but is DEPRECATED
              type: string
            initBucketURL:
              description: A bucket URL that contains a xtrabackup to initialize the
                mysql database.
              type: string
            initFileExtraSQL:
              description: InitFileExtraSQL is a list of extra sql commands to append
                to init_file.
              items:
                type: string
              type: array
            maxSlaveLatency:
              description: MaxSlaveLatency represents the allowed latency for a slave
                node in seconds. If set then the node with a latency grater than this
                is removed from service.
              format: int64
              type: integer
            metricsExporterExtraArgs:
              description: MetricsExporterExtraArgs is a list of extra command line
                arguments to pass to MySQL metrics exporter. See https://github.com/prometheus/mysqld_exporter
                for the list of available flags.
              items:
                type: string
              type: array
            minAvailable:
              description: The number of pods from that set that must still be available
                after the eviction, even in the absence of the evicted pod Defaults
                to 50%
              type: string
            mysqlConf:
              description: A map[string]string that will be passed to my.cnf file.
              type: object
            mysqlVersion:
              description: 'Represents the MySQL version that will be run. The available
                version can be found here: https://github.com/presslabs/mysql-operator/blob/0fd4641ce4f756a0aab9d31c8b1f1c44ee10fcb2/pkg/util/constants/constants.go#L87
                This field should be set even if the Image is set to let the operator
                know which mysql version is running. Based on this version the operator
                can take decisions which features can be used. Defaults to 5.7'
              type: string
            podSpec:
              description: Pod extra specification
              properties:
                affinity:
                  type: object
                annotations:
                  type: object
                containers:
                  description: Containers allows for user to specify extra sidecar
                    containers to run along with mysql
                  items:
                    type: object
                  type: array
                imagePullPolicy:
                  type: string
                imagePullSecrets:
                  items:
                    type: object
                  type: array
                initContainers:
                  description: InitContainers allows the user to specify extra init
                    containers
                  items:
                    type: object
                  type: array
                labels:
                  type: object
                metricsExporterResources:
                  description: MetricsExporterResources allows you to specify resources
                    for metrics exporter container
                  type: object
                mysqlOperatorSidecarResources:
                  description: MySQLOperatorSidecarResources allows you to specify
                    resources for sidecar container used to take backups with xtrabackup
                  type: object
                nodeSelector:
                  type: object
                priorityClassName:
                  type: string
                resources:
                  type: object
                serviceAccountName:
                  type: string
                tolerations:
                  items:
                    type: object
                  type: array
                volumeMounts:
                  description: VolumesMounts allows mounting extra volumes to the
                    mysql container
                  items:
                    type: object
                  type: array
                volumes:
                  description: Volumes allows adding extra volumes to the statefulset
                  items:
                    type: object
                  type: array
              type: object
            queryLimits:
              description: QueryLimits represents limits for a query
              properties:
                ignoreCommands:
                  description: IgnoreCommands the list of commands to be ignored.
                  items:
                    type: string
                  type: array
                ignoreDb:
                  description: IgnoreDb is the list of database that are ignored by
                    pt-kill (--ignore-db flag).
                  items:
                    type: string
                  type: array
                ignoreUser:
                  description: IgnoreUser the list of users to be ignored.
                  items:
                    type: string
                  type: array
                kill:
                  description: Kill represents the mode of which the matching queries
                    in each class will be killed, (the --victims flag). Can be one
                    of oldest|all|all-but-oldest. By default, the matching query with
                    the highest Time value is killed (the oldest query.
                  type: string
                killMode:
                  description: 'KillMode can be: `connection` or `query`, when it''s
                    used `connection` means that when a query is matched the connection
                    is killed (using --kill flag) and if it''s used `query` means
                    that the query is killed (using --kill-query flag)'
                  type: string
                maxIdleTime:
                  description: MaxIdleTime match queries that have been idle for longer
                    then this time, in seconds. (--idle-time flag) + optional
                  format: int64
                  type: integer
                maxQueryTime:
                  description: MaxQueryTime match queries that have been running for
                    longer then this time, in seconds. This field is required. (--busy-time
                    flag)
                  format: int64
                  type: integer
              required:
              - maxQueryTime
              type: object
            rcloneExtraArgs:
              description: RcloneExtraArgs is a list of extra command line arguments
                to pass to rclone.
              items:
                type: string
              type: array
            readOnly:
              description: Makes the cluster READ ONLY. Set the master to writable
                or ReadOnly
              type: boolean
            replicas:
              description: The number of pods. This updates replicas filed Defaults
                to 0
              format: int32
              type: integer
            secretName:
              description: The secret name that contains connection information to
                initialize database, like USER, PASSWORD, ROOT_PASSWORD and so on
                This secret will be updated with DB_CONNECT_URL and some more configs.
                Can be specified partially
              maxLength: 63
              minLength: 1
              type: string
            serverIDOffset:
              description: Set a custom offset for Server IDs.  ServerID for each
                node will be the index of the statefulset, plus offset
              format: int64
              type: integer
            tmpfsSize:
              description: 'TmpfsSize if specified, mounts a tmpfs of this size into
                /tmp DEPRECATED: use instead PodSpec.Volumes and PodSpec.VolumeMounts'
              type: string
            volumeSpec:
              description: PVC extra specifiaction
              properties:
                emptyDir:
                  description: EmptyDir to use as data volume for mysql. EmptyDir
                    represents a temporary directory that shares a pod's lifetime.
                  type: object
                hostPath:
                  description: HostPath to use as data volume for mysql. HostPath
                    represents a pre-existing file or directory on the host machine
                    that is directly exposed to the container.
                  type: object
                persistentVolumeClaim:
                  description: PersistentVolumeClaim to specify PVC spec for the volume
                    for mysql data. It has the highest level of precedence, followed
                    by HostPath and EmptyDir. And represents the PVC specification.
                  type: object
              type: object
            xbstreamExtraArgs:
              description: XbstreamExtraArgs is a list of extra command line arguments
                to pass to xbstream.
              items:
                type: string
              type: array
            xtrabackupExtraArgs:
              description: XtrabackupExtraArgs is a list of extra command line arguments
                to pass to xtrabackup.
              items:
                type: string
              type: array
            xtrabackupPrepareExtraArgs:
              description: XtrabackupPrepareExtraArgs is a list of extra command line
                arguments to pass to xtrabackup during --prepare.
              items:
                type: string
              type: array
            xtrabackupTargetDir:
              description: XtrabackupTargetDir is a backup destination directory for
                xtrabackup.
              type: string
          required:
          - secretName
          type: object
        status:
          properties:
            conditions:
              description: Conditions contains the list of the cluster conditions
                fulfilled
              items:
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime
                    format: date-time
                    type: string
                  message:
                    description: Message
                    type: string
                  reason:
                    description: Reason
                    type: string
                  status:
                    description: Status of the condition, one of (\"True\", \"False\",
                      \"Unknown\")
                    type: string
                  type:
                    description: type of cluster condition, values in (\"Ready\")
                    type: string
                required:
                - type
                - status
                - lastTransitionTime
                - reason
                - message
                type: object
              type: array
            nodes:
              description: Nodes contains informations from orchestrator
              items:
                properties:
                  conditions:
                    items:
                      properties:
                        lastTransitionTime:
                          format: date-time
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - type
                      - status
                      - lastTransitionTime
                      type: object
                    type: array
                  name:
                    type: string
                required:
                - name
                type: object
              type: array
            readyNodes:
              description: ReadyNodes represents number of the nodes that are in ready
                state
              format: int64
              type: integer
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

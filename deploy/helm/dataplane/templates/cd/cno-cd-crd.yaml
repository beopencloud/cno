---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: workloads.cnocd.beopenit.com
spec:
  group: cnocd.beopenit.com
  names:
    kind: Workload
    listKind: WorkloadList
    plural: workloads
    singular: workload
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Workload is the Schema for the workloads API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadSpec defines the desired state of Workload
            properties:
              bascule:
                type: string
              containers:
                items:
                  properties:
                    autoDeploy:
                      type: boolean
                    filter:
                      type: string
                    image:
                      type: string
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - image
                  type: object
                type: array
              deploymentStrategy:
                type: string
              replicas:
                format: int32
                type: integer
              strategySpec:
                properties:
                  blue:
                    items:
                      properties:
                        image:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - version
                      type: object
                    type: array
                  green:
                    items:
                      properties:
                        image:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - version
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: WorkloadStatus defines the observed state of Workload
            properties:
              ContainerStatus:
                items:
                  properties:
                    image:
                      type: string
                    name:
                      type: string
                    otherVersion:
                      items:
                        properties:
                          createdAt:
                            type: string
                          name:
                            type: string
                        required:
                        - createdAt
                        - name
                        type: object
                      type: array
                    version:
                      type: string
                    versionHistory:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              desiredReplicas:
                format: int32
                type: integer
              endpoints:
                properties:
                  current:
                    properties:
                      ingress:
                        items:
                          properties:
                            address:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            host:
                              type: string
                            ingressName:
                              type: string
                            path:
                              type: string
                            serviceName:
                              type: string
                            tls:
                              type: boolean
                          type: object
                        type: array
                      loadBalancer:
                        items:
                          properties:
                            loadBalancerStatus:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                      nodePort:
                        items:
                          properties:
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                    type: object
                  staging:
                    properties:
                      ingress:
                        items:
                          properties:
                            address:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            host:
                              type: string
                            ingressName:
                              type: string
                            path:
                              type: string
                            serviceName:
                              type: string
                            tls:
                              type: boolean
                          type: object
                        type: array
                      loadBalancer:
                        items:
                          properties:
                            loadBalancerStatus:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                      nodePort:
                        items:
                          properties:
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              readWriteOncePvc:
                type: boolean
              readyBlueReplicas:
                format: int32
                type: integer
              readyGreenReplicas:
                format: int32
                type: integer
              readyReplicas:
                format: int32
                type: integer
              services:
                items:
                  type: string
                type: array
              status:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Workload is the Schema for the workloads API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadSpec defines the desired state of Workload
            properties:
              deploymentStrategy:
                enum:
                - default
                - blue/green
                - canary
                - ab/testing
                type: string
              replicas:
                format: int32
                type: integer
              resourceType:
                enum:
                - Deployment
                - StatefulSet
                - DaemonSet
                - CronJob
                - DeploymentConfig
                type: string
              strategySpec:
                description: StrategySpec defines the desired state of Workload
                properties:
                  autoDeploy:
                    type: boolean
                  autoProgression:
                    properties:
                      enabled:
                        type: boolean
                      increment:
                        format: int32
                        type: integer
                      interval:
                        type: string
                      maxWeight:
                        format: int32
                        type: integer
                      metrics:
                        additionalProperties:
                          properties:
                            max:
                              format: int32
                              type: integer
                            min:
                              format: int32
                              type: integer
                          type: object
                        type: object
                      minRequest:
                        format: int32
                        type: integer
                      steps:
                        items:
                          format: int32
                          type: integer
                        type: array
                      webhooks:
                        items:
                          properties:
                            metadata:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                            url:
                              type: string
                          type: object
                        type: array
                    type: object
                  bascule:
                    enum:
                    - blue
                    - green
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    type: object
                  live:
                    items:
                      description: Container defines the desired state of Workload
                      properties:
                        filter:
                          type: string
                        image:
                          type: string
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - name
                      - version
                      type: object
                    type: array
                  staging:
                    items:
                      description: Container defines the desired state of Workload
                      properties:
                        filter:
                          type: string
                        image:
                          type: string
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - name
                      - version
                      type: object
                    type: array
                  trafficSplitting:
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                required:
                - live
                type: object
            required:
            - deploymentStrategy
            - replicas
            - resourceType
            - strategySpec
            type: object
          status:
            description: WorkloadStatus defines the observed state of Workload
            properties:
              containerStatus:
                items:
                  description: ContainerStatus defines the observed state of Workload
                  properties:
                    image:
                      type: string
                    name:
                      type: string
                    othersVersion:
                      items:
                        description: Tag defines
                        properties:
                          createdAt:
                            type: string
                          name:
                            type: string
                          sha265:
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    stagingVersion:
                      type: string
                    version:
                      type: string
                    versionHistory:
                      items:
                        type: string
                      type: array
                  required:
                  - image
                  - name
                  - version
                  type: object
                type: array
              desiredReplicas:
                format: int32
                type: integer
              ingresses:
                description: IngressSpec  defines the observed state of Workload
                properties:
                  live:
                    items:
                      description: IngressEndpoint defines the observed state of Workload
                      properties:
                        address:
                          items:
                            description: 'LoadBalancerIngress represents the status
                              of a load-balancer ingress point: traffic intended for
                              the service should be sent to an ingress point.'
                            properties:
                              hostname:
                                description: Hostname is set for load-balancer ingress
                                  points that are DNS based (typically AWS load-balancers)
                                type: string
                              ip:
                                description: IP is set for load-balancer ingress points
                                  that are IP based (typically GCE or OpenStack load-balancers)
                                type: string
                              ports:
                                description: Ports is a list of records of service
                                  ports If used, every port defined in the service
                                  should have an entry in it
                                items:
                                  properties:
                                    error:
                                      description: 'Error is to record the problem
                                        with the service port The format of the error
                                        shall comply with the following rules: - built-in
                                        error values shall be specified in this file
                                        and those shall use CamelCase names - cloud
                                        provider specific error values must have names
                                        that comply with the format foo.example.com/CamelCase.
                                        --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                      maxLength: 316
                                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                      type: string
                                    port:
                                      description: Port is the port number of the
                                        service port of which status is recorded here
                                      format: int32
                                      type: integer
                                    protocol:
                                      default: TCP
                                      description: 'Protocol is the protocol of the
                                        service port of which status is recorded here
                                        The supported values are: "TCP", "UDP", "SCTP"'
                                      type: string
                                  required:
                                  - port
                                  - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          type: array
                        host:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
                        serviceName:
                          type: string
                        servicePort:
                          format: int32
                          type: integer
                        tls:
                          type: boolean
                      required:
                      - host
                      - name
                      - serviceName
                      type: object
                    type: array
                  staging:
                    items:
                      description: IngressEndpoint defines the observed state of Workload
                      properties:
                        address:
                          items:
                            description: 'LoadBalancerIngress represents the status
                              of a load-balancer ingress point: traffic intended for
                              the service should be sent to an ingress point.'
                            properties:
                              hostname:
                                description: Hostname is set for load-balancer ingress
                                  points that are DNS based (typically AWS load-balancers)
                                type: string
                              ip:
                                description: IP is set for load-balancer ingress points
                                  that are IP based (typically GCE or OpenStack load-balancers)
                                type: string
                              ports:
                                description: Ports is a list of records of service
                                  ports If used, every port defined in the service
                                  should have an entry in it
                                items:
                                  properties:
                                    error:
                                      description: 'Error is to record the problem
                                        with the service port The format of the error
                                        shall comply with the following rules: - built-in
                                        error values shall be specified in this file
                                        and those shall use CamelCase names - cloud
                                        provider specific error values must have names
                                        that comply with the format foo.example.com/CamelCase.
                                        --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                      maxLength: 316
                                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                      type: string
                                    port:
                                      description: Port is the port number of the
                                        service port of which status is recorded here
                                      format: int32
                                      type: integer
                                    protocol:
                                      default: TCP
                                      description: 'Protocol is the protocol of the
                                        service port of which status is recorded here
                                        The supported values are: "TCP", "UDP", "SCTP"'
                                      type: string
                                  required:
                                  - port
                                  - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          type: array
                        host:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
                        serviceName:
                          type: string
                        servicePort:
                          format: int32
                          type: integer
                        tls:
                          type: boolean
                      required:
                      - host
                      - name
                      - serviceName
                      type: object
                    type: array
                type: object
              lastAutoProgressDate:
                format: date-time
                type: string
              lastReconciledStragegy:
                type: string
              liveReadyReplicas:
                format: int32
                type: integer
              liveVersion:
                type: string
              readWriteOncePvc:
                type: boolean
              services:
                description: Services defines the observed state of Workload
                properties:
                  live:
                    items:
                      description: ServiceEndpoint defines the observed state of Workload
                      properties:
                        address:
                          description: LoadBalancerStatus represents the status of
                            a load-balancer.
                          properties:
                            ingress:
                              description: Ingress is a list containing ingress points
                                for the load-balancer. Traffic intended for the service
                                should be sent to these ingress points.
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                          type: object
                        name:
                          type: string
                        port:
                          items:
                            description: ServicePort contains information on service's
                              port.
                            properties:
                              appProtocol:
                                description: The application protocol for this port.
                                  This field follows standard Kubernetes label syntax.
                                  Un-prefixed names are reserved for IANA standard
                                  service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).
                                  Non-standard protocols should use prefixed names
                                  such as mycompany.com/my-custom-protocol.
                                type: string
                              name:
                                description: The name of this port within the service.
                                  This must be a DNS_LABEL. All ports within a ServiceSpec
                                  must have unique names. When considering the endpoints
                                  for a Service, this must match the 'name' field
                                  in the EndpointPort. Optional if only one ServicePort
                                  is defined on this service.
                                type: string
                              nodePort:
                                description: 'The port on each node on which this
                                  service is exposed when type is NodePort or LoadBalancer.  Usually
                                  assigned by the system. If a value is specified,
                                  in-range, and not in use it will be used, otherwise
                                  the operation will fail.  If not specified, a port
                                  will be allocated if this Service requires one.  If
                                  this field is specified when creating a Service
                                  which does not need it, creation will fail. This
                                  field will be wiped when updating a Service to no
                                  longer need it (e.g. changing type from NodePort
                                  to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                format: int32
                                type: integer
                              port:
                                description: The port that will be exposed by this
                                  service.
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: The IP protocol for this port. Supports
                                  "TCP", "UDP", and "SCTP". Default is TCP.
                                type: string
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'Number or name of the port to access
                                  on the pods targeted by the service. Number must
                                  be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  If this is a string, it will be looked up as a named
                                  port in the target Pod''s container ports. If this
                                  is not specified, the value of the ''port'' field
                                  is used (an identity map). This field is ignored
                                  for services with clusterIP=None, and should be
                                  omitted or set equal to the ''port'' field. More
                                  info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          type: array
                        type:
                          enum:
                          - ClusterIP
                          - LoadBalancer
                          - NodePort
                          type: string
                      required:
                      - address
                      - name
                      - port
                      - type
                      type: object
                    type: array
                  staging:
                    items:
                      description: ServiceEndpoint defines the observed state of Workload
                      properties:
                        address:
                          description: LoadBalancerStatus represents the status of
                            a load-balancer.
                          properties:
                            ingress:
                              description: Ingress is a list containing ingress points
                                for the load-balancer. Traffic intended for the service
                                should be sent to these ingress points.
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                          type: object
                        name:
                          type: string
                        port:
                          items:
                            description: ServicePort contains information on service's
                              port.
                            properties:
                              appProtocol:
                                description: The application protocol for this port.
                                  This field follows standard Kubernetes label syntax.
                                  Un-prefixed names are reserved for IANA standard
                                  service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).
                                  Non-standard protocols should use prefixed names
                                  such as mycompany.com/my-custom-protocol.
                                type: string
                              name:
                                description: The name of this port within the service.
                                  This must be a DNS_LABEL. All ports within a ServiceSpec
                                  must have unique names. When considering the endpoints
                                  for a Service, this must match the 'name' field
                                  in the EndpointPort. Optional if only one ServicePort
                                  is defined on this service.
                                type: string
                              nodePort:
                                description: 'The port on each node on which this
                                  service is exposed when type is NodePort or LoadBalancer.  Usually
                                  assigned by the system. If a value is specified,
                                  in-range, and not in use it will be used, otherwise
                                  the operation will fail.  If not specified, a port
                                  will be allocated if this Service requires one.  If
                                  this field is specified when creating a Service
                                  which does not need it, creation will fail. This
                                  field will be wiped when updating a Service to no
                                  longer need it (e.g. changing type from NodePort
                                  to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                format: int32
                                type: integer
                              port:
                                description: The port that will be exposed by this
                                  service.
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: The IP protocol for this port. Supports
                                  "TCP", "UDP", and "SCTP". Default is TCP.
                                type: string
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'Number or name of the port to access
                                  on the pods targeted by the service. Number must
                                  be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  If this is a string, it will be looked up as a named
                                  port in the target Pod''s container ports. If this
                                  is not specified, the value of the ''port'' field
                                  is used (an identity map). This field is ignored
                                  for services with clusterIP=None, and should be
                                  omitted or set equal to the ''port'' field. More
                                  info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          type: array
                        type:
                          enum:
                          - ClusterIP
                          - LoadBalancer
                          - NodePort
                          type: string
                      required:
                      - address
                      - name
                      - port
                      - type
                      type: object
                    type: array
                type: object
              stagingReadyReplicas:
                format: int32
                type: integer
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

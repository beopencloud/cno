global:
  # cno-api config
  cnoAPI:
    labels:
      # will be applied to pods and deployment
    protocol: http
    # internalServiceName: cno-api-svc
    externalUrl: https://api.cno.io
    heathCheck:
      image:
        name: docker.io/nginxinc/nginx-unprivileged
        version: latest
      endpoint: /api/v1/healthy
# set defaultCluster=true if cluster content control plane
defaultCluster: false
defaultClusterType: gke
cnoOnboarding:
  labels:
    # will be applied to pods and deployment
  image:
    name: docker.io/beopenit/onboarding-operator-kubernetes
    version: v2.0.2
  # resources:
  #   requests:
  #     cpu: 100m
  #     memory: 512Mi
  #   limits:
  #     cpu: 1
  #     memory: 1Gi
cnoCD:
  labels:
    # will be applied to pods and deployment
  # maxStagingReplicas: -22
  envs:
    - name: MAX_STAGING_REPLICAS
      value: -1
    - name: CNO_AUTO_GEN_LISTENER
      value: false
    - name: INSECURE_REGISTRIES
      value: ""
    - name: DEFAULT_INTERNAL_GATEWAY_DOMAIN
      value: cno.local
  image:
    name: docker.io/beopenit/cno-cd-operator
    version: v2.0.2
  # resources:
  #   requests:
  #     cpu: 100m
  #     memory: 256Mi
  #   limits:
  #     cpu: 2
  #     memory: 2Gi
cnoAgent:
  labels:
    # will be applied to pods and deployment
  metricServer: true
  image:
    name: docker.io/beopenit/cno-agent
    version: v2.0.2
  # resources:
  #   requests:
  #     cpu: 100m
  #     memory: 512Mi
  #   limits:
  #     cpu: 1
  #     memory: 1Gi
  kafka:
    brokers: cno-kafka-cluster-kafka-external-bootstrap:9094
  licence:
    uuid: aa
    key: |
      my-key
    crt: |
      my-crt
    ca: |
      my-ca
    # Overwrite licence secret: set keys uuid, user.key, user.crt and ca.crt
    # secret:
    #   name: my-licence

monitoring:
  include: true
  pvcSize: 15Gi

cnoApiGateway:
  type: loadBalancer
  
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: node-role.kubernetes.io/ingress-cno
            operator: Exists
        topologyKey: kubernetes.io/hostname

  tolerations:
    - key: "ingress-cno"
      value: "reserved"
      effect: "NoSchedule"
    - key: "ingress-cno"
      value: "reserved"
      effect: "NoExecute"

  nodeSelector:
    node-role.kubernetes.io/ingress-cno: ""
global:
  # cno-api config
  cnoAPI:
    labels:
      # will be applied to pods and deployment
    protocol: http
    # internalServiceName: cno-api-svc
    externalUrl: https://api.cno.io
    heathCheck:
      image:
        name: docker.io/nginxinc/nginx-unprivileged
        version: latest
      endpoint: /api/v1/healthy
# set defaultCluster=true if cluster content control plane
defaultCluster: false
defaultClusterType: eks
cnoOnboarding:
  labels:
    # will be applied to pods and deployment
  image:
    name: docker.io/beopenit/onboarding-operator-kubernetes
    version: v1.1.0
  # resources:
  #   requests:
  #     cpu: 100m
  #     memory: 512Mi
  #   limits:
  #     cpu: 1
  #     memory: 1Gi

cnoCD:
  labels:
    # will be applied to pods and deployment
  image:
    name: docker.io/beopenit/cno-cd-operator
    version: v1.1.0
  # resources:
  #   requests:
  #     cpu: 100m
  #     memory: 512Mi
  #   limits:
  #     cpu: 1
  #     memory: 1Gi
cnoAgent:
  labels:
    # will be applied to pods and deployment
  metricServer: true
  image:
    name: docker.io/beopenit/cno-agent
    version: v1.1.0
  # resources:
  #   requests:
  #     cpu: 100m
  #     memory: 512Mi
  #   limits:
  #     cpu: 1
  #     memory: 1Gi
  kafka:
    brokers: cno-kafka-cluster-kafka-external-bootstrap:9094
  licence:
    uuid: aa
    key: |
      my-key
    crt: |
      my-crt
    ca: |
      my-ca
    # Overwrite licence secret: set keys uuid, user.key, user.crt and ca.crt
    # secret:
    #   name: my-licence

includeMonitoring: true

cnoApiGateway:
  type: loadBalancer
  nodeSelector:
    # key: value
  nodeAffinity:
    # key:
    # - value1
    # - value2
  nodeAntiAffinity:
    # key:
    # - value1
    # - value2
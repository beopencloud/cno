{{- if .Values.databaseConfig.internalDatabase }}
  {{- if hasKey .Values.databaseConfig "persistentVolumeClaim" }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.databaseConfig.persistentVolumeClaim.name }}
  labels:
    app.kubernetes.io/name: cno-mysql
    app.kubernetes.io/part-of: cno
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.databaseConfig.persistentVolumeClaim.size }}
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cno-mysql
  namespace: {{ .Release.Namespace }}
  labels:
  {{- range $key, $value := .Values.databaseConfig.labels }}
    {{ $key  }}: {{ $value  }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: cno-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cno-mysql
      {{- range $key, $value := .Values.databaseConfig.labels }}
        {{ $key  }}: {{ $value  }}
      {{- end }}
    spec:
      containers:
        - image: {{ .Values.databaseConfig.image.name }}:{{ .Values.databaseConfig.image.version }}
          name: mysql
          {{- if hasKey .Values.databaseConfig "resources" }}
          resources:
            {{- toYaml .Values.databaseConfig.resources | nindent 12 }}
          {{- end }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.databaseConfig.secret.name  }}
                  key: DB_PASSWORD
          ports:
            - containerPort: {{ .Values.databaseConfig.port }}
              name: mysql
          volumeMounts:
            {{- if hasKey .Values.databaseConfig "persistentVolumeClaim" }}
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            {{- end }}
      volumes:
        {{- if hasKey .Values.databaseConfig "persistentVolumeClaim" }}
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Values.databaseConfig.persistentVolumeClaim.name }}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.databaseConfig.host }}
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - port: {{ .Values.databaseConfig.port }}
  selector:
    app: cno-mysql
{{- end }}

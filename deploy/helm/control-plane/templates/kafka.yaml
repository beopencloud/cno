apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: cno-kafka-cluster
  namespace: {{ .Release.Namespace }}
  labels:
  {{- range $key, $value := .Values.kafkaConfig.labels }}
    {{ $key  }}: {{ $value  }}
  {{- end }}
spec:
  kafka:
    template:
      pod:
        metadata:
          labels:
          {{- range $key, $value := .Values.kafkaConfig.labels }}
            {{ $key  }}: {{ $value  }}
          {{- end }}
    version: 3.3.1
    replicas: 1
    storage:
      {{- if eq .Values.kafkaConfig.storage.type "persistent-claim" }}
      deleteClaim: {{ .Values.kafkaConfig.storage.persistentVolumeClaim.deleteClaim }}
      size: {{ .Values.kafkaConfig.storage.persistentVolumeClaim.size }}
      {{- end }}
      type: {{ .Values.kafkaConfig.storage.type }}
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: tls
      - name: external
        port: 9094
        {{- if eq .Values.expose.type "loadbalancer" }}
        type: loadbalancer
        {{- end }}
        {{- if eq .Values.expose.type "nodeport" }}
        type: nodeport
        {{- end }}
        {{- if eq .Values.expose.type "nginx-ingress"}}
        type: ingress
        {{- end }}
        {{- if eq .Values.expose.type "route"}}
        type: route
        {{- end }}
        tls: true
        authentication:
          type: tls
          {{- if eq .Values.expose.type "nginx-ingress" }}
          disableTlsHostnameVerification: true
          {{- end }}
        {{- if or (eq .Values.expose.type "nginx-ingress") (eq .Values.expose.type "route")}}
        configuration:
          {{- if eq .Values.expose.type "nginx-ingress" }}
          class: nginx
          {{- end }}
          bootstrap:
            host: bootstrap-cno.{{ .Values.expose.ingress.domain }}
          brokers:
          - broker: 0
            host: broker-0-cno.{{ .Values.expose.ingress.domain }}
          - broker: 1
            host: broker-1-cno.{{ .Values.expose.ingress.domain }}
          - broker: 2
            host: broker-2-cno.{{ .Values.expose.ingress.domain }}
        {{- end }}
    authorization:
      type: simple
      superUsers:
        - CN=cno-kafka-superadmin
    config:
      retention.ms:   1800000
      segment.bytes:  268435456
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      {{- if eq .Values.expose.type "nginx-ingress"}}
      default.replication.factor: 1
      min.insync.replicas: 1
      inter.broker.protocol.version: "3.3"
      {{- end}}
      log.message.format.version: "3.0"
  zookeeper:
    template:
      pod:
        metadata:
          labels:
          {{- range $key, $value := .Values.kafkaConfig.labels }}
            {{ $key  }}: {{ $value  }}
          {{- end }}
    replicas: 1
    storage:
      {{- if eq .Values.kafkaConfig.storage.type "persistent-claim" }}
      deleteClaim: {{ .Values.kafkaConfig.storage.persistentVolumeClaim.deleteClaim }}
      size: {{ .Values.kafkaConfig.storage.persistentVolumeClaim.size }}
      {{- end }}
      type: {{ .Values.kafkaConfig.storage.type }}
  entityOperator:
    topicOperator: {}
    userOperator: {}
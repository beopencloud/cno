---
cluster:
  # kubernetes or openshift
  platform: kubernetes
  apiUrl: https://kubernetes.default.svc.cluster.local:443
# expose type
expose:
  # values: loadbalancer, nodeport, route or nginx-ingress
  type: nginx-ingress
  # set if expose equal to route or nginx-ingress
  ingress:
    domain: dev.cno.app
# set super admin password (username admin)
superadmin:
  password: admin
  # set secret if superadmin password is in custom secret
  # secret:
  #   name: cno-super-admin
  #   key: PASSWORD

global:
  # cno-api config
  cnoAPI:
    labels:
      # will be applied to pods and deployment
    protocol: https
    internalServiceName: cno-api
    heathCheck:
      image:
        name: docker.io/nginxinc/nginx-unprivileged
        version: latest
      endpoint: /api/v1/healthy
    image:
      name: docker.io/beopenit/cno-api
      version: v2.1.1-rc
    # resources:
    #   requests:
    #     cpu: 100m
    #     memory: 512Mi
    #   limits:
    #     cpu: 1
    #     memory: 1Gi

# cno-ui config
cnoUI:
  labels:
    # will be applied to pods and deployment
  image:
    name: docker.io/beopenit/cno-ui
    version: v2.1.2-rc
  # resources:
  #   requests:
  #     cpu: 100m
  #     memory: 512Mi
  #   limits:
  #     cpu: 1
  #     memory: 1Gi

# kafka configuration
kafkaConfig:
  labels:
    # will be applied to pods and deployment
  externalBrokersUrl: cno-kafka-cluster-kafka-external-bootstrap:9094
  image:
    name: quay.io/strimzi/kafka
    version: 0.32.0-kafka-3.2.1
  storage:
    # ephemeral or persistent-claim
    type: ephemeral
    # set persistentVolumeClaim if type=persistent-claim
    persistentVolumeClaim:
      deleteClaim: true
      size: 1Gi

# kafka strimzi configuration
strimziOperator:
  # quay.io/strimzi/operator:0.27.1
  image:
    registry: quay.io
    repository: strimzi
    name: operator
    tag: 0.32.0

databaseConfig:
  labels:
    # will be applied to pods and deployment

  # internalDatabase=false if you have existing database
  internalDatabase: true
  # Only MYSQL database is supported at this time
  type: mysql
  host: localhost
  database: cno-db
  databaseConnectionName: 
  port: 3306
  secret:
    # Create secret and Overwrite DB_USERNAME DB_PASSWORD KEYS
    name: cno-db-credentials
    usernameKey: username
    passwordKey: password
    databaseKey: database
  image:
    name: docker.io/mysql
    version: "8.0.31"
  # uncomment if you want to mount volume
#  persistentVolumeClaim:
#     name: cno-database-pvc
#     size: 500m
# resources:
#   requests:
#     cpu: 100m
#     memory: 512Mi
#   limits:
#     cpu: 100m
#     memory: 512Mi

agentConfig:
  defaultCluster: true
  defaultClusterType: eks
  includeMonitoring: false

  cnoApiGateway:
    asLoadBalancer: true
  cnoAgent:
    image:
      version: v1.1.0-alpha
    labels:
      # will be applied to pods and deployment
    metricServer: false
    licence:
      secret:
        name: agent-licence
    kafka:
      brokers: cno-kafka-cluster-kafka-bootstrap:9093

  cnoCD:
    image:
      version: v1.1.0-alpha
    labels:
    # will be applied to pods and deployment

  cnoOnboarding:
    image:
      version: v1.1.0
    labels:
      # will be applied to pods and deployment

strimziKafkaOperator:
  labels:
  # will be applied to pods and deployment